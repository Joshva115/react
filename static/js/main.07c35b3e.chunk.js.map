{"version":3,"sources":["pages/home.jsx","schemas/validationSchema.jsx","pages/login.jsx","pages/register.jsx","components/header.jsx","components/footer.jsx","App.js","reportWebVitals.js","index.js"],"names":["home","react_default","a","createElement","Container","className","Row","Col","sm","Image","src","fluid","rounded","class","Button","variant","size","Card","Body","CardGroup","Img","Title","Text","Footer","wordValidation","passwordRules","basicSchema","yup","shape","name","required","matches","message","surname","email","address","password","min","confirmPassword","oneOf","username","city","zip","loginSchema","onSubmit","values","actions","console","log","resetForm","login","_useFormik","useFormik","initialValues","validationSchema","errors","touched","handleBlur","handleChange","handleSubmit","Form","Group","Label","Control","type","placeholder","id","value","onChange","onBlur","Check","label","href","register","isSubmitting","maxLength","disabled","header","Navbar","bg","expand","Brand","alt","width","height","Toggle","aria-controls","Collapse","Nav","Link","footer","classname","App","react_router_dom","components_header","react_router","path","element","pages_home","pages_login","pages_register","components_footer","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.07c35b3e.chunk.js","sourcesContent":["import {\r\n  Button,\r\n  Card,\r\n  Container,\r\n  Row,\r\n  Col,\r\n  CardGroup,\r\n  Image,\r\n} from \"react-bootstrap\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport React from \"react\";\r\n\r\nfunction home() {\r\n  return (\r\n    <div>\r\n      <Container className=\"px-4 my-5\">\r\n        <Row>\r\n          <Col sm={7}>\r\n            <Image src=\"https://picsum.photos/900/400\" fluid rounded></Image>\r\n          </Col>\r\n          <Col sm={5}>\r\n            <h1 class=\"font-weight-light\">Welcome</h1>\r\n            <p>\r\n              \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\r\n              eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut\r\n              enim ad minim veniam, quis nostrud exercitation ullamco laboris\r\n              nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in\r\n              reprehenderit in voluptate velit esse cillum dolore eu fugiat\r\n              nulla pariatur. Excepteur sint occaecat cupidatat non proident,\r\n              sunt in culpa qui officia deserunt mollit anim id est laborum.\"\r\n            </p>\r\n            <Button variant=\"outline-secondary\" size=\"sm\">\r\n              Call to action\r\n            </Button>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Card className=\"text-center my-3 bg-secondary text-white py-2\">\r\n            <Card.Body>This is some text within a card body.</Card.Body>\r\n          </Card>\r\n        </Row>\r\n        <CardGroup>\r\n          <Card>\r\n            <Card.Img\r\n              variant=\"top\"\r\n              src=\"https://picsum.photos/id/220/320/200\"\r\n            />\r\n            <Card.Body>\r\n              <Card.Title>Card title</Card.Title>\r\n              <Card.Text>\r\n                This is a wider card with supporting text below as a natural\r\n                lead-in to additional content. This content is a little bit\r\n                longer.\r\n              </Card.Text>\r\n              <Button variant=\"outline-secondary\" size=\"sm\">\r\n                Link somewhere\r\n              </Button>\r\n            </Card.Body>\r\n            <Card.Footer>\r\n              <small className=\"text-muted\">Last Updated: 19/6/22</small>\r\n            </Card.Footer>\r\n          </Card>\r\n          <Card>\r\n            <Card.Img\r\n              variant=\"top\"\r\n              src=\"https://picsum.photos/id/221/320/200\"\r\n            />\r\n            <Card.Body>\r\n              <Card.Title>Card title</Card.Title>\r\n              <Card.Text>\r\n                This is a wider card with supporting text below as a natural\r\n                lead-in to additional content. This content is a little bit\r\n                longer.\r\n              </Card.Text>\r\n              <Button variant=\"outline-secondary\" size=\"sm\">\r\n                Link somewhere\r\n              </Button>\r\n            </Card.Body>\r\n            <Card.Footer>\r\n              <small className=\"text-muted\">Last Updated: 19/6/22</small>\r\n            </Card.Footer>\r\n          </Card>\r\n          <Card>\r\n            <Card.Img variant=\"top\" src=\"https://picsum.photos/320/200\" />\r\n            <Card.Body>\r\n              <Card.Title>Card title</Card.Title>\r\n              <Card.Text>\r\n                This is a wider card with supporting text below as a natural\r\n                lead-in to additional content. This content is a little bit\r\n                longer.\r\n              </Card.Text>\r\n              <Button variant=\"outline-secondary\" size=\"sm\">\r\n                Link somewhere\r\n              </Button>\r\n            </Card.Body>\r\n            <Card.Footer>\r\n              <small className=\"text-muted\">Last Updated: 19/6/22</small>\r\n            </Card.Footer>\r\n          </Card>\r\n        </CardGroup>\r\n        <Card className=\"my-3\">\r\n          <Card.Img variant=\"top\" src=\"https://picsum.photos/1527/270\" />\r\n          <Card.Body>\r\n            <Card.Text>\r\n              Some quick example text to build on the card title and make up the\r\n              bulk of the card's content.\r\n            </Card.Text>\r\n          </Card.Body>\r\n        </Card>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default home;\r\n","import * as yup from \"yup\";\r\n\r\nconst wordValidation = /^[A-Za-z]+$/;\r\n// should validate strings only\r\n// min 5 characters, 1 upper case letter, 1 lower case letter, 1 numeric digit.\r\nconst passwordRules = /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{5,}$/;\r\n\r\nconst postCode = /^(0[289][0-9]{2})|([1345689][0-9]{3})|(2[0-8][0-9]{2})|(290[0-9])|(291[0-4])|(7[0-4][0-9]{2})|(7[8-9][0-9]{2})$/;\r\n//Here are the rules for Australian postcodes:\r\nexport const basicSchema = yup.object().shape({\r\n  name: yup\r\n    .string(\"Please enter your name\")\r\n    .required(\"Please enter your name\")\r\n    .matches(wordValidation, { message: \"Name should be letters only\" }),\r\n  surname: yup\r\n    .string(\"Please enter your surname\")\r\n    .required(\"Please enter your surname\")\r\n    .matches(wordValidation, { message: \"Surname should be letters only\" }),\r\n  email: yup\r\n    .string()\r\n    .email(\"Please enter a valid email\")\r\n    .required(\"Please enter your email\"),\r\n  address: yup\r\n    .string(\"Please enter your full address\")\r\n    .required(\"Your address is necessary\"),\r\n  password: yup\r\n    .string()\r\n    .min(5)\r\n    .matches(passwordRules, {\r\n      message:\r\n        \"Must contain a minimum of 5 characters, 1 digit, 1 lower case letter, 1 upper case letter\",\r\n    })\r\n    .required(\"Password is necessary for submission\"),\r\n  confirmPassword: yup\r\n    .string()\r\n    .oneOf([yup.ref(\"password\"), null], \"Passwords must match\")\r\n    .required(\"Confirm Password is necessary for submission\"),\r\n  username: yup\r\n    .string(\"t\")\r\n    .required(\"You must choose a username\")\r\n    .matches(passwordRules, {\r\n      message:\r\n        \"Must contain a minimum of 5 characters, 1 digit, 1 lower case letter, 1 upper case letter\",\r\n    }),\r\n  city: yup\r\n    .string(\"Please enter your name\")\r\n    .required(\"Please enter your city\")\r\n    .matches(wordValidation, { message: \"Name should be letters only\" }),\r\n  zip: yup\r\n    .string()\r\n    .matches(postCode, {\r\n      message: \"Your Zipcode must be a valid within Australia\",\r\n    })\r\n    .required(\"Your ZIP code is necessary\"),\r\n});\r\nexport const loginSchema = yup.object().shape({\r\n  email: yup\r\n    .string()\r\n    .email(\"Email not valid\")\r\n    .required(\"Email is required\"),\r\n  password: yup.string().required(\"Password is required\"),\r\n});\r\n","import React from \"react\";\r\nimport { Form, Button, Container, Card, Row } from \"react-bootstrap\";\r\nimport { useFormik } from \"formik\";\r\nimport { loginSchema } from \"../schemas/validationSchema\";\r\nimport \"./general.css\";\r\nimport \"./login.css\";\r\nimport \"./registercss.css\";\r\n\r\nconst onSubmit = (values, actions) => {\r\n  console.log(values);\r\n  actions.resetForm();\r\n};\r\nfunction login() {\r\n  const { values, errors, touched, handleBlur, handleChange, handleSubmit } =\r\n    useFormik({\r\n      initialValues: {\r\n        email: \"\",\r\n        password: \"\",\r\n      },\r\n      validationSchema: loginSchema,\r\n      onSubmit,\r\n    });\r\n  return (\r\n    <div>\r\n      {/* <Row className=\"justify-content-sm-center h-100\"></Row> */}\r\n      <Container className=\"d-flex align-items-center justify-content-center py-5\">\r\n        <Card className=\"card shadow-lg p-5\">\r\n          <Form onSubmit={handleSubmit}>\r\n            <Card.Title className=\"pb-2 display-5 mt-5 text-center\">\r\n              Login\r\n            </Card.Title>\r\n            <Form.Group className=\"mb-3 pt-3\">\r\n              <Form.Label className=\"lead\">Email address</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"Email Address\"\r\n                id=\"email\"\r\n                value={values.email}\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n                className={errors.email && touched.email ? \"input-error\" : \"\"}\r\n              />\r\n              {errors.email && touched.email && (\r\n                <p className=\"error\">{errors.email}</p>\r\n              )}\r\n              <Form.Text className=\"text-muted\">\r\n                We'll <b>never</b> share your data with anyone else.\r\n              </Form.Text>\r\n            </Form.Group>\r\n\r\n            <Form.Group className=\"mb-3\">\r\n              <Form.Label className=\"lead\">Password</Form.Label>\r\n              <Form.Control\r\n                type=\"password\"\r\n                placeholder=\"Password\"\r\n                id=\"password\"\r\n                value={values.password}\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n                className={\r\n                  errors.password && touched.password ? \"input-error\" : \"\"\r\n                }\r\n              />\r\n              {errors.password && touched.password && (\r\n                <p className=\"error\">{errors.password}</p>\r\n              )}\r\n            </Form.Group>\r\n            <Form.Group className=\"mb-3\">\r\n              <Form.Check type=\"checkbox\" label=\"Remember me\" />\r\n            </Form.Group>\r\n            <Form.Group className=\"col-md-12 text-center pt-1\">\r\n              <Button\r\n                variant=\"btn btn-lg w-100\"\r\n                className=\"custom-btn\"\r\n                type=\"submit\"\r\n              >\r\n                Login\r\n              </Button>\r\n            </Form.Group>\r\n            <Form.Group className=\"pb-2\">\r\n              <Container className=\"text-left\">\r\n                <Card className=\"text-center mt-3\">\r\n                  <Card.Footer className=\"border-0\">\r\n                    <Card.Body className=\"text-center\">\r\n                      {\" \"}\r\n                      Don't have an account?{\" \"}\r\n                      <a href=\"/register\" className=\"text-dark\">\r\n                        Create One\r\n                      </a>\r\n                    </Card.Body>\r\n                  </Card.Footer>\r\n                </Card>\r\n              </Container>\r\n            </Form.Group>\r\n          </Form>\r\n        </Card>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default login;\r\n","import React from \"react\";\r\nimport { Container, Form, Button } from \"react-bootstrap\";\r\nimport \"./registercss.css\";\r\nimport { useFormik } from \"formik\";\r\nimport { basicSchema } from \"../schemas/validationSchema\";\r\n\r\nconst onSubmit = (values, actions) => {\r\n  console.log(values);\r\n  actions.resetForm();\r\n};\r\n\r\nfunction register() {\r\n  const {\r\n    values,\r\n    isSubmitting,\r\n    errors,\r\n    touched,\r\n    handleBlur,\r\n    handleChange,\r\n    handleSubmit,\r\n  } = useFormik({\r\n    initialValues: {\r\n      name: \"\",\r\n      surname: \"\",\r\n      email: \"\",\r\n      password: \"\",\r\n      confirmPassword: \"\",\r\n      username: \"\",\r\n      address: \"\",\r\n      city: \"\",\r\n      zip: \"\",\r\n    },\r\n    validationSchema: basicSchema,\r\n    onSubmit,\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <Container>\r\n        <h3 class=\"text-left display-5 pt-4\">Create Account</h3>\r\n        <Form onSubmit={handleSubmit} className=\"row g-2 mt-3\">\r\n          <Form.Group className=\"mb-1 col-md-6\">\r\n            <Form.Label className=\"lead\">First Name</Form.Label>\r\n            <Form.Control\r\n              value={values.name}\r\n              onChange={handleChange}\r\n              id=\"name\"\r\n              type=\"text\"\r\n              placeholder=\"Name\"\r\n              onBlur={handleBlur}\r\n              className={errors.name && touched.name ? \"input-error\" : \"\"}\r\n            />\r\n            {errors.name && touched.name && (\r\n              <p className=\"error\">{errors.name}</p>\r\n            )}\r\n          </Form.Group>\r\n          <Form.Group className=\"col-md-6 w-10\">\r\n            <Form.Label className=\"lead\">Surname</Form.Label>\r\n            <Form.Control\r\n              value={values.surname}\r\n              onChange={handleChange}\r\n              id=\"surname\"\r\n              type=\"text\"\r\n              placeholder=\"Surname\"\r\n              onBlur={handleBlur}\r\n              className={errors.surname && touched.surname ? \"input-error\" : \"\"}\r\n            />\r\n            {errors.surname && touched.surname && (\r\n              <p className=\"error\">{errors.surname}</p>\r\n            )}\r\n          </Form.Group>\r\n          <Form.Group className=\"col-md-6 w-10\">\r\n            <Form.Label className=\"lead\">Email Address</Form.Label>\r\n            <Form.Control\r\n              type=\"text\"\r\n              placeholder=\"Email Address\"\r\n              id=\"email\"\r\n              value={values.email}\r\n              onChange={handleChange}\r\n              onBlur={handleBlur}\r\n              className={errors.email && touched.email ? \"input-error\" : \"\"}\r\n            />\r\n            {errors.email && touched.email && (\r\n              <p className=\"error\">{errors.email}</p>\r\n            )}\r\n          </Form.Group>\r\n          <Form.Group className=\"mb-1 col-md-6\">\r\n            <Form.Label className=\"lead\">Username</Form.Label>\r\n            <Form.Control\r\n              type=\"text\"\r\n              placeholder=\"Username\"\r\n              id=\"username\"\r\n              value={values.username}\r\n              onChange={handleChange}\r\n              onBlur={handleBlur}\r\n              className={\r\n                errors.username && touched.username ? \"input-error\" : \"\"\r\n              }\r\n            />\r\n            {errors.username && touched.username && (\r\n              <p className=\"error\">{errors.username}</p>\r\n            )}\r\n          </Form.Group>\r\n          <Form.Group className=\"mb-1 col-md-4\">\r\n            <Form.Label className=\"lead\">Address</Form.Label>\r\n            <Form.Control\r\n              type=\"text\"\r\n              placeholder=\"1234 Main St\"\r\n              id=\"address\"\r\n              value={values.address}\r\n              onChange={handleChange}\r\n              onBlur={handleBlur}\r\n              className={errors.address && touched.address ? \"input-error\" : \"\"}\r\n            />\r\n            {errors.address && touched.address && (\r\n              <p className=\"error\">{errors.address}</p>\r\n            )}\r\n            <Form.Text className=\"text-muted\">\r\n              We'll <b>never</b> share your information with anyone else.\r\n            </Form.Text>\r\n          </Form.Group>\r\n          <Form.Group className=\"col-md-4\">\r\n            <Form.Label className=\"lead\">City</Form.Label>\r\n            <Form.Control\r\n              value={values.city}\r\n              onChange={handleChange}\r\n              type=\"text\"\r\n              id=\"city\"\r\n              placeholder=\"Sydney\"\r\n              maxLength={10}\r\n              onBlur={handleBlur}\r\n              className={errors.city && touched.city ? \"input-error\" : \"\"}\r\n            />\r\n            {errors.city && touched.city && (\r\n              <p className=\"error\">{errors.city}</p>\r\n            )}\r\n          </Form.Group>\r\n          <Form.Group className=\"col-md-4\">\r\n            <Form.Label className=\"lead\">Zip</Form.Label>\r\n            <Form.Control\r\n              value={values.zip}\r\n              onChange={handleChange}\r\n              type=\"text\"\r\n              id=\"zip\"\r\n              placeholder=\"2567\"\r\n              maxLength={4}\r\n              onBlur={handleBlur}\r\n              className={errors.zip && touched.zip ? \"input-error\" : \"\"}\r\n            />\r\n            {errors.zip && touched.zip && <p className=\"error\">{errors.zip}</p>}\r\n          </Form.Group>\r\n          <Form.Group className=\"mb-1 col-md-6\">\r\n            <Form.Label className=\"lead\">Password</Form.Label>\r\n            <Form.Control\r\n              value={values.password}\r\n              onChange={handleChange}\r\n              id=\"password\"\r\n              type=\"password\"\r\n              placeholder=\"Password\"\r\n              onBlur={handleBlur}\r\n              className={\r\n                errors.password && touched.password ? \"input-error\" : \"\"\r\n              }\r\n            />\r\n            {errors.password && touched.password && (\r\n              <p className=\"error\">{errors.password}</p>\r\n            )}\r\n          </Form.Group>\r\n          <Form.Group className=\"col-md-6 w-10\">\r\n            <Form.Label className=\"lead\">Confirm Password</Form.Label>\r\n            <Form.Control\r\n              value={values.confirmPassword}\r\n              onChange={handleChange}\r\n              id=\"confirmPassword\"\r\n              type=\"password\"\r\n              placeholder=\"Password\"\r\n              onBlur={handleBlur}\r\n              className={\r\n                errors.confirmPassword && touched.confirmPassword\r\n                  ? \"input-error\"\r\n                  : \"\"\r\n              }\r\n            />\r\n            {errors.confirmPassword && touched.confirmPassword && (\r\n              <p className=\"error\">{errors.confirmPassword}</p>\r\n            )}\r\n          </Form.Group>\r\n          <Form.Group class=\"col-md-12 text-center pt-3\">\r\n            <Button\r\n              disabled={isSubmitting}\r\n              variant=\"btn btn-lg w-75\"\r\n              className=\"custom-btn\"\r\n              type=\"submit\"\r\n            >\r\n              Register Details\r\n            </Button>\r\n          </Form.Group>\r\n        </Form>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default register;\r\n","import React from \"react\";\r\nimport { Navbar, Container, Nav } from \"react-bootstrap\";\r\nfunction header() {\r\n  return (\r\n    <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\">\r\n      <Container>\r\n        <Navbar.Brand href=\"/\">\r\n          <img\r\n            alt=\"\"\r\n            src=\"https://getbootstrap.com/docs/5.0/assets/brand/bootstrap-logo.svg\"\r\n            width=\"30\"\r\n            height=\"30\"\r\n            className=\"d-inline-block align-top\"\r\n          />{\" \"}\r\n          React Bootstrap\r\n        </Navbar.Brand>\r\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n        <Navbar.Collapse id=\"basic-navbar-nav\">\r\n          <Nav className=\"ms-auto\">\r\n            <Nav.Link href=\"/login\">Login</Nav.Link>\r\n            <Nav.Link href=\"/register\">Register</Nav.Link>\r\n          </Nav>\r\n        </Navbar.Collapse>\r\n      </Container>\r\n    </Navbar>\r\n  );\r\n}\r\n\r\nexport default header;\r\n","import React from \"react\";\r\nimport { Container } from \"react-bootstrap\";\r\nfunction footer() {\r\n  return (\r\n    <footer class=\"py-5 mt-5 bg-dark\">\r\n      <Container classname=\"px-4\">\r\n        <p class=\"text-center text-white lead\">\r\n          Copyright &copy; Bootstrap 5 Example - Joshua Bartlett\r\n        </p>\r\n      </Container>\r\n    </footer>\r\n  );\r\n}\r\n\r\nexport default footer;\r\n","import React from \"react\";\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\nimport Home from \"./pages/home\";\nimport Login from \"./pages/login\";\nimport Register from \"./pages/register\";\nimport Header from \"./components/header\";\nimport Footer from \"./components/footer\";\nfunction App() {\n  return (\n    <BrowserRouter>\n      <div name=\"container\">\n        <Header />\n        <Routes>\n          <Route path=\"/\" element={<Home />}></Route>\n          <Route path=\"/Login\" element={<Login />}></Route>\n          <Route path=\"/Register\" element={<Register />}></Route>\n        </Routes>\n        <Footer />\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}